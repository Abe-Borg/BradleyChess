
'''
Script for Converting and Cleaning PGN Files to JSON Format

This script processes chess game data stored in PGN (Portable Game Notation) format, extracts relevant information, and saves it in JSON format. The extracted information includes the number of moves (PlyCount), the result of the game, and the sequence of moves in Standard Algebraic Notation (SAN). The primary goal is to prepare the data for further analysis or machine learning tasks by converting it into a more accessible format.

Dependencies:
- re
- pandas
- chess.pgn
- chess
- json
- game_settings
- time

Functions:
    load_pgn_file(input_file_path):
        Loads a PGN file and returns a list of games.
        Args:
            input_file_path (str): The path to the input PGN file.
        Returns:
            list: A list of games.

    clean_up_pgn_file(input_file_path, output_file_path):
        Cleans up a PGN file with multiple games and saves only the PlyCount, the Result, and the chess moves for each game, in the form of an array.
        Args:
            input_file_path (str): The path to the input PGN file.
            output_file_path (str): The path to the output file.

Main Execution:
    - The script is designed to be run as a standalone program.
    - It processes multiple PGN files (commented out) and converts them to JSON format.
    - Measures the time taken for the conversion process.

Function Details:

def load_pgn_file(input_file_path):
    '''
    Loads a PGN file and returns a list of games.

    Parameters:
        input_file_path (str): The path to the input PGN file.

    Returns:
        list: A list of chess games.

    This function reads a PGN file and extracts individual chess games from it. Each game is appended to a list and returned for further processing.
    '''

def clean_up_pgn_file(input_file_path, output_file_path):
    '''
    Cleans up a PGN file with multiple games and saves only the PlyCount, 
    the Result, and the chess moves for each game, in the form of an array.

    Parameters:
        input_file_path (str): The path to the input PGN file.
        output_file_path (str): The path to the output JSON file.

    This function performs the following steps:
    1. Loads the PGN file using the load_pgn_file function.
    2. Initializes an empty list to store cleaned game data.
    3. For each game:
        - Extracts the total number of moves (PlyCount).
        - Extracts the game result (Result).
        - Extracts the sequence of moves in Standard Algebraic Notation (SAN).
        - Appends the cleaned data to the list.
    4. Saves the cleaned game data to a JSON file with indentation for readability.
    '''

if __name__ == '__main__':
    start_time = time.time()

    # Uncomment the following lines to process multiple PGN files
    # clean_up_pgn_file(game_settings.chess_pgn_file_path_1, game_settings.chess_json_file_path_part_1)
    # clean_up_pgn_file(game_settings.chess_pgn_file_path_2, game_settings.chess_json_file_path_part_2)
    # clean_up_pgn_file(game_settings.chess_pgn_file_path_3, game_settings.chess_json_file_path_part_3)
    # clean_up_pgn_file(game_settings.chess_pgn_file_path_4, game_settings.chess_json_file_path_part_4)
    # clean_up_pgn_file(game_settings.chess_pgn_file_path_5, game_settings.chess_json_file_path_part_5)
    # clean_up_pgn_file(game_settings.chess_pgn_file_path_6, game_settings.chess_json_file_path_part_6)
    # clean_up_pgn_file(game_settings.chess_pgn_file_path_7, game_settings.chess_json_file_path_part_7)
    # clean_up_pgn_file(game_settings.chess_pgn_file_path_8, game_settings.chess_json_file_path_part_8)
    # clean_up_pgn_file(game_settings.chess_pgn_file_path_9, game_settings.chess_json_file_path_part_9)
    # clean_up_pgn_file(game_settings.chess_pgn_file_path_10, game_settings.chess_json_file_path_part_10)
    # clean_up_pgn_file(game_settings.chess_pgn_file_path_11, game_settings.chess_json_file_path_part_11)

    clean_up_pgn_file(game_settings.chess_pgn_file_path_12, game_settings.chess_json_file_path_part_12)
    
    # Uncomment the following lines to process more PGN files
    # clean_up_pgn_file(game_settings.chess_pgn_file_path_13, game_settings.chess_json_file_path_part_13)
    # clean_up_pgn_file(game_settings.chess_pgn_file_path_part_14, game_settings.chess_json_file_path_part_14)
    # clean_up_pgn_file(game_settings.chess_pgn_file_path_part_15, game_settings.chess_json_file_path_part_15)
    # clean_up_pgn_file(game_settings.chess_pgn_file_path_part_16, game_settings.chess_json_file_path_part_16)
    # clean_up_pgn_file(game_settings.chess_pgn_file_path_part_17, game_settings.chess_json_file_path_part_17)
    # clean_up_pgn_file(game_settings.chess_pgn_file_path_part_18, game_settings.chess_json_file_path_part_18)
    # clean_up_pgn_file(game_settings.chess_pgn_file_path_part_19, game_settings.chess_json_file_path_part_19)
    
    end_time = time.time()
    total_time = end_time - start_time
     
    print('PGN to JSON conversion is complete\n')
    print(f'It took: {total_time} seconds')
'''
